<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github连接报错</title>
    <url>/archives/github%E8%BF%9E%E6%8E%A5%E6%8A%A5%E9%94%99.html</url>
    <content><![CDATA[<p>在github拉取代码时报错</p>
<p><img src="https://gitee.com/SealRui/images-upload/raw/master/myblog/20220105095625.png"></p>
<span id="more"></span>

<p>首先检查ssh连接是否成功，在git输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>若还是报错ssh: connect to host github.com port 22: Connection timed out就可以使用以下解决办法</p>
<ol>
<li><h3 id="打开终端，进入-ssh目录，查看是否存在这些文件-若不存在，则可能是ssh没配置对，首先需要配置ssh"><a href="#打开终端，进入-ssh目录，查看是否存在这些文件-若不存在，则可能是ssh没配置对，首先需要配置ssh" class="headerlink" title="打开终端，进入/.ssh目录，查看是否存在这些文件 若不存在，则可能是ssh没配置对，首先需要配置ssh"></a>打开终端，进入/.ssh目录，查看是否存在这些文件 若不存在，则可能是ssh没配置对，首先需要配置ssh</h3><p><img src="https://gitee.com/SealRui/images-upload/raw/master/myblog/20220105100219.png"></p>
<p>配置ssh：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码参数含义：</p>
<p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p>
</blockquote>
<p>以上代码省略了 -f 参数，因此，运行上面那条命令后会让你输入一个文件名，用于保存刚才生成的 SSH key 代码，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line"># Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa): [Press enter]</span><br></pre></td></tr></table></figure>

<p>当然，你也可以不输入文件名，使用默认文件名（推荐），那么就会生成 id_rsa 和 id_rsa.pub 两个秘钥文件。</p>
<p>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），</p>
<p>当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line"># Enter same passphrase again:</span><br></pre></td></tr></table></figure>

<p>接下来，就会显示如下代码提示，如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line"># Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line"># The key fingerprint is:</span><br><span class="line"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure>

<p>当你看到上面这段代码的收，那就说明，你的 SSH key 已经创建成功，你只需要添加到github的SSH key上就可以了。</p>
<p>在浏览器登录你的github账号，把上面生成的id_rsa.pub内容添加到github上的SSH keys中。</p>
</li>
<li><h3 id="若存在则在继续在终端输入以下命令新建一个文件"><a href="#若存在则在继续在终端输入以下命令新建一个文件" class="headerlink" title="若存在则在继续在终端输入以下命令新建一个文件"></a>若存在则在继续在终端输入以下命令新建一个文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim config</span><br></pre></td></tr></table></figure>

<p>在文件中输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User sealrui@qq.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure>

<p>最后:wq退出编辑即可</p>
</li>
<li><h3 id="接着再执行"><a href="#接着再执行" class="headerlink" title="接着再执行"></a>接着再执行</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>出现提示回车yes即可</p>
</li>
</ol>
<p><img src="https://gitee.com/SealRui/images-upload/raw/master/myblog/20220105101716.png"></p>
<p>​    验证就能顺利通过了</p>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令</title>
    <url>/archives/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p>记录git常用命令，好记性不如烂笔头</p>
<span id="more"></span>

<ul>
<li>初始化git仓库</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>该命令执行完后会在当前目录生成一个 .git 隐藏文件夹</p>
<ul>
<li>将目录下以 .c 结尾及 README 文件提交到仓库中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add *.c </span><br><span class="line">git add README </span><br><span class="line">git commit -m <span class="string">&#x27;初始化项目版本&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>将远程仓库克隆到本地</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;repo&gt; &lt;directory&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#参数说明：</span></span><br><span class="line"><span class="comment">#repo: Git远程仓库地址。</span></span><br><span class="line"><span class="comment">#directory: 本地目录。</span></span><br><span class="line"><span class="comment">#git clone git://github.com/schacon/grit.git mygrit/grit</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Git从master主分支创建Develop分支的命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b develop master</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到Master分支 </span></span><br><span class="line">git checkout master </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对Develop分支进行合并 </span></span><br><span class="line">git merge --no-ff develop </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对合并生成的新节点，做一个标签 </span></span><br><span class="line">git tag -a 0.0.1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支 </span></span><br><span class="line">git branch -d develop</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#该命令显示从最近到最远的提交日志。每一次提交都有对应的 commit id 和 commit message </span></span><br><span class="line">git <span class="built_in">log</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#根据 id 回退到指定的版本 </span></span><br><span class="line">git reset --hard id </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看命令操作的历史 </span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>git remote</li>
</ul>
<ol>
<li>不带选项的时候，git remote命令列出所有远程主机</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote -v </span><br><span class="line">origin git@github.com:jquery/jquery.git (fetch) </span><br><span class="line">origin git@github.com:jquery/jquery.git (push)</span><br></pre></td></tr></table></figure>


<ol start="2">
<li>克隆版本库的时候，所使用的远程主机自动被Git命名为origin。如果想用其他的主机名，需要用git clone命令的-o选项指定</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -o jQuery https://github.com/jquery/jquery.git </span><br><span class="line">$ git remote </span><br><span class="line">jQuery</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>git remote show命令加上主机名，可以查看该主机的详细信息</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote show &lt;主机名&gt;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>git remote add命令用于添加远程主机。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote add &lt;主机名&gt; &lt;网址&gt;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>git remote rm命令用于删除远程主机。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote rm &lt;主机名&gt;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>git remote rename命令用于远程主机的改名。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git remote rename &lt;原主机名&gt; &lt;新主机名&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>git fetch </li>
</ul>
<p>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到git fetch命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git fetch &lt;远程主机名&gt; <span class="comment">#上面命令将某个远程主机的更新，全部取回本地。</span></span><br></pre></td></tr></table></figure>

<p><code>git fetch</code>命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。</p>
<p>默认情况下,<code>git fetch</code>取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git fetch &lt;远程主机名&gt; &lt;分支名&gt; </span><br><span class="line">$ git fetch origin master</span><br></pre></td></tr></table></figure>

<p>所取回的更新，在本地主机上要用”远程主机名/分支名”的形式读取。比如<code>origin</code>主机的<code>master</code>，就要用<code>origin/master</code>读取。</p>
<p><code>git branch</code>命令的<code>-r</code>选项，可以用来查看远程分支，<code>-a</code>选项查看所有分支。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch -r </span><br><span class="line">origin/master </span><br><span class="line"></span><br><span class="line">$ git branch -a</span><br><span class="line">* master </span><br><span class="line">  remotes/origin/master </span><br><span class="line"><span class="comment">#上面命令表示，本地主机的当前分支是master，远程分支是origin/master。</span></span><br></pre></td></tr></table></figure>

<p>取回远程主机的更新以后，可以在它的基础上，使用git checkout命令创建一个新的分支。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git checkout -b newBrach origin/master </span><br><span class="line"></span><br><span class="line"><span class="comment">#本地分支上合并远程分支 </span></span><br><span class="line">$ git merge origin/master</span><br></pre></td></tr></table></figure>


<ul>
<li>git pull</li>
</ul>
<p>git pull命令的作用是，取回远程主机某个分支的更新，再与本地的指定分支合并。它的完整格式稍稍有点复杂。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; </span><br><span class="line"></span><br><span class="line"><span class="comment">#取回origin主机的next分支，与本地的master分支合并 </span></span><br><span class="line">$ git pull origin next:master </span><br><span class="line"></span><br><span class="line"><span class="comment">#如果远程分支是与当前分支合并，则冒号后面的部分可以省略。 </span></span><br><span class="line">$ git pull origin next </span><br><span class="line"></span><br><span class="line"><span class="comment">#上面命令表示，取回origin/next分支，再与当前分支合并。实质上，这等同于先做git fetch，再做git merge。</span></span><br></pre></td></tr></table></figure>

<p>在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在<code>git clone</code>的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的<code>master</code>分支自动”追踪”<code>origin/master</code>分支。</p>
<ul>
<li>Git也允许手动建立追踪关系。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch --set-upstream master origin/next</span><br></pre></td></tr></table></figure>


<p>上面命令指定<code>master</code>分支追踪<code>origin/next</code>分支。</p>
<p>如果当前分支与远程分支存在追踪关系，<code>git pull</code>就可以省略远程分支名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull origin</span><br></pre></td></tr></table></figure>

<p>上面命令表示，本地的当前分支自动与对应的<code>origin</code>主机”追踪分支”（remote-tracking branch）进行合并。</p>
<p>如果当前分支只有一个追踪分支，连远程主机名都可以省略。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure>

<p>上面命令表示，当前分支自动与唯一一个追踪分支进行合并。</p>
<ul>
<li>git push</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure>

<p>如果省略远程分支名，则表示将本地分支推送与之存在”追踪关系”的远程分支（通常两者同名），如果该远程分支不存在，则会被新建。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>

<p>上面命令表示，将本地的<code>master</code>分支推送到<code>origin</code>主机的<code>master</code>分支。如果后者不存在，则会被新建。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset node_modules </span><br><span class="line"><span class="comment">#把node_modules目录移除 add 索引库</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rm path </span><br><span class="line"><span class="comment"># 删除暂存区或分支上的文件, 同时工作区也不需要这个文件了,和 rm 命令类似 </span></span><br><span class="line"></span><br><span class="line">git rm -r --cached path </span><br><span class="line"><span class="comment"># 只是删除git 暂存区的文件，对本地文件没有影响 # -r 递归删除子目录</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-NexT Tag 插件的使用</title>
    <url>/archives/Hexo-NexT%20Tag%20%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8.html</url>
    <content><![CDATA[<p>Tag Plugin 是一种使 Hexo 支持特殊样式内容的方法。例如，我们无法在标准 Markdown 中显示具有自定义尺寸的图像。然后我们可以使用标签插件来解决它。 Hexo 有很多可以帮助用户的标签。 Hexo 还具有主题接口，使主题能够创建自己的标签。</p>
<span id="more"></span>

<h2 id="文本居中引用-Centered-Quote"><a href="#文本居中引用-Centered-Quote" class="headerlink" title="文本居中引用 - Centered Quote"></a>文本居中引用 - Centered Quote</h2><p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125;世间所有的相遇，都是久别重逢&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>
<p>显示效果：</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>世间所有的相遇，都是久别重逢</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<h2 id="提示块-Note"><a href="#提示块-Note" class="headerlink" title="提示块 - Note"></a>提示块 - Note</h2><p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>

<p>主题配置文件中可以修改风格：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Note tag (bs-callout)</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  # 风格</span><br><span class="line">  style: flat</span><br><span class="line">  # 图标</span><br><span class="line">  icons: false</span><br><span class="line">  # 颜色深 -&gt; 浅</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: -8</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<div class="note default">
            <p>default 提示块标签</p>
          </div>

<div class="note primary">
            <p>primary 提示块标签</p>
          </div>

<div class="note success">
            <p>success 提示块标签</p>
          </div>

<div class="note info">
            <p>info 提示块标签</p>
          </div>

<div class="note warning">
            <p>warning 提示块标签</p>
          </div>

<div class="note danger">
            <p>danger 提示块标签</p>
          </div>

<h2 id="标签-Label"><a href="#标签-Label" class="headerlink" title="标签 - Label"></a>标签 - Label</h2><p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% label default@默认 %&#125; &#123;% label primary@主要 %&#125; &#123;% label success@成功 %&#125; &#123;% label info@信息 %&#125; &#123;% label warning@警告 %&#125; &#123;% label danger@危险 %&#125; </span><br><span class="line">&#123;% label success@这是成功的信息%&#125;</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<span class="label default">默认</span> <span class="label primary">主要</span> <span class="label success">成功</span> <span class="label info">信息</span> <span class="label warning">警告</span> <span class="label danger">危险</span> 
<span class="label success">这是成功的信息</span>

<h2 id="选项卡-Tabs"><a href="#选项卡-Tabs" class="headerlink" title="选项卡 - Tabs"></a>选项卡 - Tabs</h2><p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% tabs tab,1 %&#125; 名字为tab，默认在第1个选项卡，如果是-1则隐藏</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**选项卡 1** </span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**选项卡 2**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab A --&gt;</span><br><span class="line">**选项卡 3** 名字为A</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>

<p>主题配置文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Tabs tag</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: true</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><a href="#tab-1">tab 1</a></li><li class="tab"><a href="#tab-2">tab 2</a></li><li class="tab"><a href="#tab-3">A</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-1"><p><strong>选项卡 1</strong> </p></div><div class="tab-pane" id="tab-2"><p><strong>选项卡 2</strong></p></div><div class="tab-pane" id="tab-3"><p><strong>选项卡 3</strong> 名字为A</p></div></div></div>

<h2 id="按钮-Button"><a href="#按钮-Button" class="headerlink" title="按钮 - Button"></a>按钮 - Button</h2><p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% button url, text, icon [class], [title] %&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>url</code> : 绝对或相对 URL</li>
<li><code>text</code> : 按钮文字，如果未指定图标则为必须</li>
<li><code>icon</code> : FontAwesome 图标名称（开头没有’fa-‘）。如果未指定文本，则为必需</li>
<li><code>[class]</code> : FontAwesome 类：<code>fa-fw | fa-lg | fa-2x | fa-3x | fa-4x | fa-5X</code> ，可选参数。</li>
<li><code>[title]</code> : 鼠标悬停时的工具提示，可选参数。</li>
</ul>
<div class="note warning">
            <p>注意：最好添加 <code>&lt;div&gt;</code> 标签，测试时没加 div，下面显示不完全，加上非常美观。</p>
          </div>

<p>一个示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&#123;% button https:&#x2F;&#x2F;www.baidu.com&#x2F; ,百度,home fa-fw,百度首页%&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<div><a class="btn" href="https://www.baidu.com/ " title="百度首页">
            <i class="fa fa-home fa-fw"></i>百度
          </a></div>

<p>多个按钮居中显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;text-center&quot;&gt;&lt;div&gt;&#123;% button https:&#x2F;&#x2F;www.baidu.com&#x2F; ,百度,home fa-fw,这是百度首页%&#125; &#123;% button https:&#x2F;&#x2F;github.com&#x2F; ,Github,fab fa-github fa-fw,Github%&#125; &#123;% button https:&#x2F;&#x2F;weibo.com&#x2F; ,微博,fab fa-weibo fa-fw,微博%&#125;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>显示效果：</p>
<div class="text-center"><div><a class="btn" href="https://www.baidu.com/ " title="这是百度首页">
            <i class="fa fa-home fa-fw"></i>百度
          </a> <a class="btn" href="https://github.com/ " title="Github">
            <i class="fab fa-github fa-fw"></i>Github
          </a> <a class="btn" href="https://weibo.com/ " title="微博">
            <i class="fab fa-weibo fa-fw"></i>微博
          </a></div></div>

<hr>
<div class="note primary">
            <p>文章转自<a href="https://tding.top/archives/29bfe8c9.html">Hexo-NexT Tag 插件的使用</a>，作者<strong>小丁</strong></p>
          </div>]]></content>
      <categories>
        <category>Hexo-Plugin</category>
      </categories>
      <tags>
        <tag>hexo-next-tag</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Wkhtmltopdf导出PDF</title>
    <url>/archives/%E4%BD%BF%E7%94%A8Wkhtmltopdf%E5%AF%BC%E5%87%BAPDF.html</url>
    <content><![CDATA[<p><em>Wkhtmltopdf是什么？引用<a href="https://wkhtmltopdf.org/">官网</a>的一句话</em>：</p>
<blockquote>
<p><strong>wkhtmltopdf</strong> and <strong>wkhtmltoimage</strong> are open source (LGPLv3) command line tools to render HTML into PDF and various image formats using the Qt WebKit rendering engine. These run entirely “headless” and do not require a display or display service.</p>
</blockquote>
<span id="more"></span>

<h3 id="为什么要用这个工具？"><a href="#为什么要用这个工具？" class="headerlink" title="为什么要用这个工具？"></a>为什么要用这个工具？</h3><p>项目需要每个月自动在后台生成PDF报告存储到文件服务器，不能使用前端生成PDF的方法，所以找到了这个工具。</p>
<h3 id="下载安装：https-wkhtmltopdf-org-downloads-html"><a href="#下载安装：https-wkhtmltopdf-org-downloads-html" class="headerlink" title="下载安装：https://wkhtmltopdf.org/downloads.html"></a>下载安装：<a href="https://wkhtmltopdf.org/downloads.html">https://wkhtmltopdf.org/downloads.html</a></h3><p>​    Windows安装直接<code>下一步</code>到最后就可以。安装之后要配置环境变量，在<code>path</code>中加入<code>C:\Program Files\wkhtmltopdf\bin</code>，<em>根据自己的安装目录</em>。然后就可以在运行命令，打开cmd：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;wkhtmltopdf https://www.baidu.com C:\Users\Administrator\Desktop\demo.pdf</span><br><span class="line">Loading pages (1/6)</span><br><span class="line">Counting pages (2/6)</span><br><span class="line">Resolving links (4/6)</span><br><span class="line">Loading headers and footers (5/6)</span><br><span class="line">Printing pages (6/6)</span><br><span class="line">Done</span><br></pre></td></tr></table></figure>

<p>此时桌面就会生成一个百度首页的PDF文件。</p>
<h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wkhtmltopdf [GLOBAL OPTION]... [OBJECT]... &lt;output file&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>常用的参数选项</p>
<ul>
<li>–cookie <name> <value>  设置访问网页时的cookie,value 需要进行url编码(可重复使用此参数指定多个cookie)</li>
<li>–javascript-delay <msec>    延迟一定的毫秒，等待javascript执行完成(默认值是200)</li>
<li>–debug-javascript                 Show javascript debugging output(默认是不开启的)</li>
</ul>
</blockquote>
<p><em>更多参数选项参考<a href="https://wkhtmltopdf.org/usage/wkhtmltopdf.txt">官方文档</a></em></p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>​    有的web页面导出的PDF文件内容不全，可以延长JavaScript执行等待时间。但是有的web页面怎么延长都还是内容缺失，甚至生成空白页，目前没搞明白什么原因导致的。</p>
<h3 id="最后给一段参考demo代码"><a href="#最后给一段参考demo代码" class="headerlink" title="最后给一段参考demo代码"></a>最后给一段参考demo代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company.project.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WkhtmltopdfDemo</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> consId = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wkhtmltopdf工作目录</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WKHTMLTOPDF_WORKDIR = <span class="string">&quot;C:\\Program Files\\wkhtmltopdf\\bin&quot;</span>;</span><br><span class="line">    <span class="comment">// wkhtmltopdf启动程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WKHTMLTOPDF_PROGRAM = <span class="string">&quot;C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe&quot;</span>;</span><br><span class="line">    <span class="comment">// 生成pdf存储路径</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FILE_PATH = <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\test&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processTool</span><span class="params">(ArrayList&lt;String&gt; command)</span> </span>&#123;</span><br><span class="line">        ProcessBuilder processBuilder = <span class="keyword">new</span> ProcessBuilder(command);</span><br><span class="line">        processBuilder.directory(<span class="keyword">new</span> File(WkhtmltopdfDemo.WKHTMLTOPDF_WORKDIR));</span><br><span class="line">        processBuilder.redirectErrorStream(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Process process = processBuilder.start();</span><br><span class="line">            <span class="keyword">assert</span> process.getInputStream().read() == -<span class="number">1</span>;</span><br><span class="line">            BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(process.getInputStream(), StandardCharsets.UTF_8));</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;cmd&quot;</span> + line);</span><br><span class="line">            &#125;</span><br><span class="line">            bufferedReader.close();</span><br><span class="line">            process.waitFor();</span><br><span class="line">            <span class="keyword">if</span> (process.exitValue() != <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;非正常结束&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createFileDirectory</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        File parentFile = file.getParentFile();</span><br><span class="line">        <span class="keyword">if</span> (!parentFile.exists()) &#123;</span><br><span class="line">            parentFile.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">wkhtmltopdfTool</span><span class="params">(String htmlURL, String filePath, Cookie[] cookies)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; command = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        command.add(WkhtmltopdfDemo.WKHTMLTOPDF_PROGRAM);</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">            String value = cookie.getValue();</span><br><span class="line">            command.add(<span class="string">&quot;--cookie&quot;</span>);</span><br><span class="line">            command.add(cookie.getName());</span><br><span class="line">            command.add((value == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(value.trim()) ? <span class="string">&quot;null&quot;</span> : value));</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        command.add(&quot;--javascript-delay&quot;);</span></span><br><span class="line"><span class="comment">//        command.add(&quot;5000&quot;);</span></span><br><span class="line"><span class="comment">//        command.add(&quot;--debug-javascript&quot;);</span></span><br><span class="line">        command.add(htmlURL);</span><br><span class="line">        command.add(filePath);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">new</span> WkhtmltopdfDemo().processTool(command);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">wkhtmltopdfTool</span><span class="params">(String htmlURL, String filePath)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; command = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        command.add(WkhtmltopdfDemo.WKHTMLTOPDF_PROGRAM);</span><br><span class="line"><span class="comment">//        command.add(&quot;--javascript-delay&quot;);</span></span><br><span class="line"><span class="comment">//        command.add(&quot;5000&quot;);</span></span><br><span class="line"><span class="comment">//        command.add(&quot;--debug-javascript&quot;);</span></span><br><span class="line">        command.add(htmlURL);</span><br><span class="line">        command.add(filePath);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">new</span> WkhtmltopdfDemo().processTool(command);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] htmltopdfByte(String htmlURL, String fileName) &#123;</span><br><span class="line">        String filePath = WkhtmltopdfDemo.FILE_PATH + <span class="string">&quot;\\&quot;</span> + fileName;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        WkhtmltopdfDemo wkhtmltopdfDemo = <span class="keyword">new</span> WkhtmltopdfDemo();</span><br><span class="line">        <span class="keyword">boolean</span> result = wkhtmltopdfDemo.wkhtmltopdfTool(htmlURL, WkhtmltopdfDemo.createFileDirectory(filePath));</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                FileInputStream inputStream = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">                ByteArrayOutputStream outputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> n;</span><br><span class="line">                <span class="keyword">while</span> ((n = inputStream.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    outputStream.write(b, <span class="number">0</span>, n);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (inputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    inputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (outputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">                bytes = outputStream.toByteArray();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">htmltopdfFile</span><span class="params">(String htmlURL, String fileName)</span> </span>&#123;</span><br><span class="line">        String filePath = WkhtmltopdfDemo.FILE_PATH + <span class="string">&quot;\\&quot;</span> + fileName;</span><br><span class="line">        File file = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">new</span> WkhtmltopdfDemo().wkhtmltopdfTool(htmlURL, WkhtmltopdfDemo.createFileDirectory(filePath));</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            file = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> file;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        WkhtmltopdfDemo wkhtmltopdfDemo = <span class="keyword">new</span> WkhtmltopdfDemo();</span><br><span class="line">        String htmlURL = <span class="string">&quot;\&quot;https://www.baidu.com\&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (consId &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            String fileName = <span class="string">&quot;test&quot;</span> + consId + <span class="string">&quot;.pdf&quot;</span>;</span><br><span class="line">            String filePath = WkhtmltopdfDemo.FILE_PATH + <span class="string">&quot;\\&quot;</span> + fileName;</span><br><span class="line">            wkhtmltopdfDemo.wkhtmltopdfTool(htmlURL, WkhtmltopdfDemo.createFileDirectory(filePath));</span><br><span class="line">            consId--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        WkhtmltopdfDemo wkhtmltopdfDemo = <span class="keyword">new</span> WkhtmltopdfDemo();</span><br><span class="line">        String htmlURL = <span class="string">&quot;\&quot;https://www.baidu.com\&quot;&quot;</span>;</span><br><span class="line">        String fileName = <span class="string">&quot;test.pdf&quot;</span>;</span><br><span class="line">        String filePath = WkhtmltopdfDemo.FILE_PATH + <span class="string">&quot;\\&quot;</span> + fileName;</span><br><span class="line">        wkhtmltopdfDemo.wkhtmltopdfTool(htmlURL, WkhtmltopdfDemo.createFileDirectory(filePath));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Wkhtmltopdf</tag>
        <tag>PDF导出</tag>
      </tags>
  </entry>
  <entry>
    <title>hello</title>
    <url>/archives/hello.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<p><img src="https://gitee.com/SealRui/images-upload/raw/master/myblog/20210324215410.jpg" alt="EVA"></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>





<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>





<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>



<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>



<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<p><img src="https://gitee.com/SealRui/images-upload/raw/master/myblog/20210324214811.jpg" alt="test"></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
